<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:secure-properties="http://www.mulesoft.org/schema/mule/secure-properties" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/secure-properties http://www.mulesoft.org/schema/mule/secure-properties/current/mule-secure-properties.xsd">
	<mongo:config name="MongoDB_Config" doc:name="MongoDB Config" doc:id="a7cd414d-7c83-4261-8409-263d1a295a5f" >
		<mongo:connection-string-connection connectionString="${secure::mongo.connString}" />
	</mongo:config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="db875ce8-a808-4156-b0ce-1a67b81d7f42" >
		<http:request-connection host="istio-ingressgateway-istio-system.apps.awsopenshift.ne-innovation.com" port="80" />
	</http:request-config>
	<secure-properties:config name="Secure_Properties_Config" doc:name="Secure Properties Config" doc:id="cddd9f27-edb9-4335-b56b-b754efd9201d" file="config/${env}.yaml" key="${key}"/>
	<configuration-properties doc:name="Configuration properties" doc:id="ac923dd7-c8bc-4f58-b5a3-aadc1d509906" file="config/${env}.yaml" />
	<global-property doc:name="Global Property" doc:id="77e3d9ba-e80b-4deb-8bbc-dc4bf123267e" name="env" value="local" />
	<sub-flow name="policy-api-implementationSub_Flow1" doc:id="77d5bba6-5962-4a3b-8bad-6f0130bde533" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="7a9994fb-9580-4ba0-9b84-f70d86d38165" >
			<route >
				<set-variable value='#[output application/json
---
{
	searchParam : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_drivers"
}]' doc:name="Set Variable" doc:id="28b868e6-a899-413e-9cea-5e5d6093a12d" variableName="query"/>
				<flow-ref doc:name="Flow Reference" doc:id="ea592bf6-be81-4431-93c3-8868c3493e03" name="policy-api-implementationSub_Flow"/>
			</route>
			<route >
				<set-variable value='#[output application/json
---
{
	searchParam : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_vehicles"
}]' doc:name="Set Variable" doc:id="bdfd786f-65d7-4daf-a5f0-3373c5288547" variableName="query" />
				<flow-ref doc:name="Flow Reference" doc:id="8cabb392-e508-4b63-8fdc-29b58f411f16" name="policy-api-implementationSub_Flow" />
			</route>
			<route >
				<set-variable value='#[output application/json
---
{
	searchParam : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_customers"
}]' doc:name="Set Variable" doc:id="26f493fe-097c-4292-8c67-0a659cb4e0a4" variableName="query" />
				<flow-ref doc:name="Flow Reference" doc:id="cd35576d-2206-43a6-b00c-eff8c6ebce07" name="policy-api-implementationSub_Flow" />
			</route>
			<route >
				<set-variable value='#[output application/json
---
{
	searchParam : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_rate_issue"
}]' doc:name="Set Variable" doc:id="5262ddcc-a0cd-487b-a227-881a7708e0c7" variableName="query" />
				<flow-ref doc:name="Flow Reference" doc:id="e1259980-741d-46a7-9dff-2f92aa8f95a8" name="policy-api-implementationSub_Flow" />
			</route>
			<route >
				<set-variable value='#[output application/json
---
{
	searchParam : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_incidents"
}]' doc:name="Set Variable" doc:id="316a8653-e16e-4b22-a894-db13705fe650" variableName="query" />
				<flow-ref doc:name="Flow Reference" doc:id="5589fcf4-3c59-4620-9c6f-043fed9c3f3d" name="policy-api-implementationSub_Flow" />
			</route>
		</scatter-gather>
		<ee:transform doc:name="Transform Message" doc:id="5343f3ff-ca25-465a-8df9-810cd198db65" >
			<ee:message >
				<ee:set-payload ><![CDATA[output application/json
---
{
	drivers : [payload[0].payload],
	vehicles: [payload[1].payload],
	customer: payload[2].payload,
	coverages:[payload[3].payload],
	incidents : [payload[4].payload],
	"issue-info": vars.issueInfo,
	policyNumber : (random() * 10000000000000) as String {format: "0"}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="Flow Reference" doc:id="ca2152c8-c22d-476f-af11-5c149c958412" name="save_policy_data_subflow"/>
		<async doc:name="Async" doc:id="29c9b0b8-617f-46f8-b6df-c9c8908634ea" >
			<http:request method="POST" doc:name="Request" doc:id="162b94bf-a5af-4155-86c1-8f6bf1c6319c" config-ref="HTTP_Request_configuration" path="/policy/publish" target="aysncResponse">
				<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/json"
}]]]></http:headers>
			</http:request>
		</async>
	</sub-flow>
	<sub-flow name="policy-api-implementationSub_Flow" doc:id="0f86520d-5544-4549-8399-3463a4657945" >
		<mongo:find-one-document collectionName="#[vars.query.collectionName]" doc:name="Find one document" doc:id="397c6398-d700-40ea-b154-6c423bc5a7c8" config-ref="MongoDB_Config" failOnNotFound="false" returnId="false">
			<mongo:find-query ><![CDATA[#[vars.query.searchParam]]]></mongo:find-query>
		</mongo:find-one-document>
		<set-payload value="#[output application/json
---
payload]" doc:name="Set Payload" doc:id="22058044-26e2-41ab-8af2-4aff03546168" />
	</sub-flow>
	<sub-flow name="save_policy_data_subflow" doc:id="607afdb7-f382-40b9-8091-c33575e94188" >
		<mongo:exists-collection doc:name="Exists collection" doc:id="63f257e0-9b8a-4cf2-a98f-5c276e431aba" config-ref="MongoDB_Config" target="policyCollectionExists">
			<mongo:collection-name ><![CDATA[policy_data]]></mongo:collection-name>
		</mongo:exists-collection>
		<choice doc:name="Choice" doc:id="d283374e-aab2-4bd9-a818-98751e8897db" >
			<when expression="#[vars.policyCollectionExists == false]">
				<mongo:create-collection doc:name="Create collection" doc:id="538a98ed-66a5-40ac-9d0b-89bf8ff9e775" config-ref="MongoDB_Config" collectionName="policy_data"/>
			</when>
		</choice>
		<mongo:insert-document collectionName="policy_data" doc:name="Insert document" doc:id="fd31bc01-6eb1-403d-a28d-2ccedc648d4c" config-ref="MongoDB_Config" target="response"/>
	</sub-flow>
	<sub-flow name="get-policy-subFlow" doc:id="48fe8729-2be7-48cc-98a8-4a4095304ab6" >
		<logger level="INFO" doc:name="Logger" doc:id="617caed4-5a56-487e-a768-b356440cdc2e" message="#[%dw 2.0

output application/java

---
p('secure::mongo.connString')]"/>
		<set-variable value='#[output application/json
---
{
	searchParam : {
		policyNumber: vars.quoteId
	},
	collectionName: "policy_data"
}]' doc:name="Set Variable" doc:id="bbb466f2-81f4-4af3-9755-55110964ae36" variableName="query" />
		<flow-ref doc:name="Flow Reference" doc:id="a278c3a5-7f1e-441b-a388-0a9b4a96d3ed" name="policy-api-implementationSub_Flow"/>
	</sub-flow>
</mule>
