<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd">
	
	<mongo:config name="MongoDB_Config" doc:name="MongoDB Config" doc:id="c7d72aa6-24e5-4a4c-bfb0-bbbe53d3c818" >
		<mongo:connection-string-connection connectionString="mongodb://lrqi_db:lrqi_db_pwd@lrqidb-shard-00-00-wksjy.mongodb.net:27017,lrqidb-shard-00-01-wksjy.mongodb.net:27017,lrqidb-shard-00-02-wksjy.mongodb.net:27017/lrqi?authSource=admin&amp;replicaSet=LRQIDB-shard-0&amp;readPreference=primary&amp;retryWrites=true&amp;ssl=true" />
	</mongo:config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="2befe026-42b4-40b2-9ebd-95500b8c3627" >
		<http:request-connection host="istio-ingressgateway-istio-system.apps.awsopenshift.ne-innovation.com" port="80" />
	</http:request-config>
	<sub-flow name="policy-sub-flow" doc:id="f2e0ae28-75e5-46d6-bb17-a77324790c0f" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="b781568a-cd8e-4386-85ef-7b023ef80eed" >
			<route >
				<set-payload value='#[output application/json
---
{
	query : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_drivers"
}]' doc:name="Set Payload" doc:id="c96627e8-73e4-4e17-810f-d7c9a1ea6ce8" />
				<flow-ref doc:name="Flow Reference" doc:id="850837bc-7aa6-49a1-9904-ee289c73cd1b" name="GetDrivers" />
			</route>
			<route >
				<set-payload value='#[output application/json
---
{
	query : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_vehicles"
}]' doc:name="Set Payload" doc:id="1305f003-a151-4b74-a8e8-e96143ab4ff4" />
				<flow-ref doc:name="Flow Reference" doc:id="63c50cac-4612-461a-a5e7-39fa125209b2" name="GetDrivers"/>
			</route>
			<route >
				<set-payload value='#[output application/json
---
{
	query : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_customers"
}]' doc:name="Set Payload" doc:id="21ca6c80-20d3-4c84-9662-fdfda646f73b" />
				<flow-ref doc:name="Flow Reference" doc:id="9675a4dd-81e5-4b76-b79f-6a2132391a3e" name="GetDrivers"/>
			</route>
			<route >
				<set-payload value='#[output application/json
---
{
	query : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_rate_issue"
}]' doc:name="Set Payload" doc:id="7a43845b-1deb-4d77-a36c-e11b8b064932" />
				<flow-ref doc:name="Flow Reference" doc:id="58ca6f82-d2d8-4b81-b295-735fb4b70c09" name="GetDrivers"/>
			</route>
			<route >
				<set-payload value='#[output application/json
---
{
	query : {
		quoteId: vars.quoteId
	},
	collectionName: "col_lrqi_incidents"
}]' doc:name="Set Payload" doc:id="b7dc749e-5ae0-4aba-bb4b-4ed60b9236f0" />
				<flow-ref doc:name="Flow Reference" doc:id="ba43e46a-18f5-47d2-a08a-522965670448" name="GetDrivers"/>
			</route>
		</scatter-gather>
		<set-payload value='#[output application/json
---
{
	drivers : [payload[0].payload],
	vehicles: [payload[1].payload],
	customer: payload[2].payload,
	coverages:[payload[3].payload],
	incidents : [payload[4].payload],
	"issue-info": vars.issueInfo,
	policyNumber : (random() * 10000000000000) as String {format: "0"}
}]' doc:name="Set Payload" doc:id="c8821050-60aa-4716-8c2e-e62a45e390c8" />
		<flow-ref doc:name="Flow Reference" doc:id="12d5e05c-9ad7-41f0-b645-388a7952e0a8" name="publishKafka"/>
	</sub-flow>
	<sub-flow name="GetDrivers" doc:id="cb978aa8-0857-4db3-9632-0d54833db64e" >
		
		<mongo:find-one-document doc:name="Find one document" doc:id="5c24024a-b2b9-4c4d-962c-bc9673824f81" config-ref="MongoDB_Config" collectionName="#[payload.collectionName]" failOnNotFound="false" returnId="false">
			<mongo:find-query ><![CDATA[#[payload.query]]]></mongo:find-query>
		</mongo:find-one-document>
		<set-payload value="#[%dw 2.0
output application/json
---
payload]" doc:name="Set Payload" doc:id="f9250b30-3130-4d6e-b636-a4a393c8c8f7" />
	</sub-flow>
	<sub-flow name="publishKafka" doc:id="b0bc5bbb-97ce-4eda-aeb6-5c95af528dd4" >
		<http:request method="POST" doc:name="Request" doc:id="497bfb9c-a676-4717-a198-a5ed39da67de" config-ref="HTTP_Request_configuration" path="/policy/publish" target="outputResponse">
			<http:headers ><![CDATA[#[output application/java
---
{
	"Content-Type" : "application/problem+json; charset=utf-8"
}]]]></http:headers>
		</http:request>
	</sub-flow>
</mule>
